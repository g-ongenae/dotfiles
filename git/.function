## Git functions
function getCurrentBranch {
	# https://stackoverflow.com/questions/6245570/how-to-get-the-current-branch-name-in-git
	CURRENT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
	echo "This is the current branch: $CURRENT_BRANCH"
}

function pull {
	getCurrentBranch
	git pull origin $CURRENT_BRANCH
}

function push {
	getCurrentBranch

	if [ "$#" -gt 0 ]; then
		REMOTE=$1
	else
		REMOTE="origin"
	fi
	read -rp "Are you sure you want to use $REMOTE as remote ?"

	REMOTE_EXIST=$(git ls-remote --heads $REMOTE $CURRENT_BRANCH | grep -e "$CURRENT_BRANCH" | wc -l)
	if [[ "$REMOTE_EXIST" ]]; then
		git push $REMOTE $CURRENT_BRANCH
	else
		git push --set-upstream $REMOTE $CURRENT_BRANCH
	fi
}

function switch_branch {
	echo "Listing branches of the git repository."
	BRANCHES=$(git branch) || echo "Error while getting branches"

	# Transform the string result into an array
	read -a BRANCHES <<<$BRANCHES

	# Remove character * that indicates the current branch
	for i in "${!BRANCHES[@]}"; do
		if [[ "${BRANCHES[$i]}" = "*" ]]; then
			TO_REMOVE=$i
		fi
	done

	unset "BRANCHES[$TO_REMOVE]"

	# Print list of branch with their index
	for i in "${!BRANCHES[@]}"; do
		echo "$i -> ${BRANCHES[i]}"
	done

	read -rp "What branch do you want to switch to ?" BRANCH_INDEX

	git checkout ${BRANCHES[$BRANCH_INDEX]}
}

## Some checks before committing
# TODO: Use git-hooks instead, maybe => http://githooks.com/
# Maybe add a prompt for better commits
function commit {
	[ -f "$CWD/package.json" ] && yarn test
	git commit -m "$1"
}

## TODO:
# function update {
## Update all repositories on computer with git pull
## Two options:
## - Soft: if modifications ignore
## - Hard: Stash and force
# }
